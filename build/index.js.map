{"version":3,"file":"index.js","mappings":"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AY,mBAAO,CAAC,oBAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iGAAiG,eAAe;AAChH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA,KAAK,GAAG;;AAER,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,4BAA4B;AAC5B;AACA,qCAAqC;;AAErC,gCAAgC;AAChC;AACA;;AAEA,gCAAgC;;AAEhC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;;AAGF;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,sBAAsB;AACtB;AACA,SAAS;AACT,uBAAuB;AACvB;AACA,SAAS;AACT,uBAAuB;AACvB;AACA,SAAS;AACT,wBAAwB;AACxB;AACA,SAAS;AACT,wBAAwB;AACxB;AACA,SAAS;AACT,iCAAiC;AACjC;AACA,SAAS;AACT,2BAA2B;AAC3B;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2DAA2D;;AAE3D;AACA;;AAEA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA,gFAAgF;AAChF;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;;;AAGlB;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;;;AAGJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2HAA2H;AAC3H;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA,oEAAoE;;AAEpE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,eAAe;AAC1B,WAAW,GAAG;AACd,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA,oBAAoB;AACpB,2DAA2D,UAAU;AACrE,yBAAyB,UAAU;AACnC;AACA,aAAa,UAAU;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;AACA;AACA;AACA,MAAM;;;AAGN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,YAAY,SAAS;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,GAAG;AACd;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,GAAG;AACd;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,iBAAiB;AACvC;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN,4CAA4C;;AAE5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB;;;AAGA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA,0DAA0D;AAC1D;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gDAAgD,gDAAgD,MAAM,aAAa;;AAEnH;AACA,iDAAiD,kCAAkC,OAAO;;AAE1F,yGAAyG,cAAc,UAAU,gGAAgG,kBAAkB,UAAU,UAAU;;AAEvQ;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;;AAEA;;AAEA,gBAAgB;AAChB,WAAW;AACX,YAAY;AACZ,GAAG;AACH;;;;;;;;;;;ACpzCa;;AAEb,IAAI,KAAqC,EAAE,EAE1C,CAAC;AACF,EAAE,+IAAkE;AACpE;;;;;;;;;;;ACNA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D","sources":["webpack://nocs-obatala/./node_modules/@wordpress/icons/build-module/library/edit.js","webpack://nocs-obatala/./node_modules/@wordpress/icons/build-module/library/pencil.js","webpack://nocs-obatala/./node_modules/@wordpress/icons/build-module/library/trash.js","webpack://nocs-obatala/./src/admin/App.js","webpack://nocs-obatala/./src/admin/components/ProcessManager.js","webpack://nocs-obatala/./src/admin/components/ProcessStepManager.js","webpack://nocs-obatala/./src/admin/components/ProcessTypeManager.js","webpack://nocs-obatala/./src/admin/components/ProcessTypeManager/ProcessStepForm.js","webpack://nocs-obatala/./src/admin/components/ProcessTypeManager/ProcessTypeForm.js","webpack://nocs-obatala/./src/admin/components/ProcessTypeManager/ProcessTypeList.js","webpack://nocs-obatala/./src/admin/components/ProcessViewer.js","webpack://nocs-obatala/./src/admin/redux/reducer.js","webpack://nocs-obatala/./node_modules/react/cjs/react-jsx-runtime.development.js","webpack://nocs-obatala/./node_modules/react/jsx-runtime.js","webpack://nocs-obatala/external window \"React\"","webpack://nocs-obatala/external window [\"wp\",\"apiFetch\"]","webpack://nocs-obatala/external window [\"wp\",\"blockEditor\"]","webpack://nocs-obatala/external window [\"wp\",\"components\"]","webpack://nocs-obatala/external window [\"wp\",\"element\"]","webpack://nocs-obatala/external window [\"wp\",\"primitives\"]","webpack://nocs-obatala/webpack/bootstrap","webpack://nocs-obatala/webpack/runtime/compat get default export","webpack://nocs-obatala/webpack/runtime/define property getters","webpack://nocs-obatala/webpack/runtime/hasOwnProperty shorthand","webpack://nocs-obatala/webpack/runtime/make namespace object"],"sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { default as pencil } from './pencil';\nexport default pencil;\n//# sourceMappingURL=edit.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pencil = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"m19 7-3-3-8.5 8.5-1 4 4-1L19 7Zm-7 11.5H5V20h7v-1.5Z\"\n  })\n});\nexport default pencil;\n//# sourceMappingURL=pencil.js.map","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst trash = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12 5.5A2.25 2.25 0 0 0 9.878 7h4.244A2.251 2.251 0 0 0 12 5.5ZM12 4a3.751 3.751 0 0 0-3.675 3H5v1.5h1.27l.818 8.997a2.75 2.75 0 0 0 2.739 2.501h4.347a2.75 2.75 0 0 0 2.738-2.5L17.73 8.5H19V7h-3.325A3.751 3.751 0 0 0 12 4Zm4.224 4.5H7.776l.806 8.861a1.25 1.25 0 0 0 1.245 1.137h4.347a1.25 1.25 0 0 0 1.245-1.137l.805-8.861Z\"\n  })\n});\nexport default trash;\n//# sourceMappingURL=trash.js.map","import { render } from \"@wordpress/element\";\nimport ProcessManager from \"./components/ProcessManager\";\nimport ProcessTypeManager from \"./components/ProcessTypeManager\";\nimport ProcessStepManager from './components/ProcessStepManager';\nimport ProcessViewer from './components/ProcessViewer';\n\n// Função para navegar para o ProcessViewer ao selecionar um processo\nconst navigateToProcessViewer = (processId) => {\n  window.location.href = `?page=process-viewer&process_id=${processId}`;\n};\n\n// Adiciona um evento listener para ser executado quando o conteúdo do DOM for completamente carregado\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // Obtém os elementos do DOM pelos IDs\n  const processElement = document.getElementById(\"process-manager\");\n  const processTypeElement = document.getElementById(\"process-type-manager\");\n  const processStepElement = document.getElementById(\"process-step-manager\");\n  const processViewerElement = document.getElementById(\"process-viewer\");\n\n  // Verifica se o elemento com o ID 'process-manager' existe\n  // Se existir, renderiza o componente ProcessManager dentro deste elemento\n  if (processElement) {\n    render(<ProcessManager onSelectProcess={navigateToProcessViewer} />, processElement);\n  }\n\n  // Verifica se o elemento com o ID 'process-type-manager' existe\n  // Se existir, renderiza o componente ProcessTypeManager dentro deste elemento\n  if (processTypeElement) {\n    render(<ProcessTypeManager />, processTypeElement);\n  }\n\n  // Verifica se o elemento com o ID 'process-step-manager' existe\n  // Se existir, renderiza o componente ProcessStepManager dentro deste elemento\n  if (processStepElement) {\n    render(<ProcessStepManager />, processStepElement);\n  }\n\n  // Verifica se o elemento com o ID 'process-viewer' existe\n  // Se existir, renderiza o componente ProcessViewer dentro deste elemento\n  if (processViewerElement) {\n    render(<ProcessViewer />, processViewerElement);\n  }\n});\n","import { useState, useEffect } from 'react';\nimport { Spinner, Button, SelectControl, TextControl, Notice, Panel, PanelHeader, PanelRow } from '@wordpress/components';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst ProcessManager = ({ onSelectProcess }) => {\n    const [processTypes, setProcessTypes] = useState([]);\n    const [processes, setProcesses] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [newProcessTitle, setNewProcessTitle] = useState('');\n    const [newProcessType, setNewProcessType] = useState('');\n    const [selectedProcessId, setSelectedProcessId] = useState(null); // Estado para armazenar o ID do processo selecionado\n\n    useEffect(() => {\n        fetchProcessTypes();\n        fetchProcesses();\n    }, []);\n\n    // Função para buscar os tipos de processo na API\n    const fetchProcessTypes = () => {\n        apiFetch({ path: `/wp/v2/process_type?per_page=100&_embed` })\n            .then(data => {\n                setProcessTypes(data);\n            })\n            .catch(error => {\n                console.error('Error fetching process types:', error);\n            });\n    };\n\n    // Função para buscar os processos existentes na API\n    const fetchProcesses = () => {\n        setIsLoading(true);\n        apiFetch({ path: `/wp/v2/process_obatala?per_page=100&_embed` })\n            .then(data => {\n                setProcesses(data);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching processes:', error);\n                setIsLoading(false);\n            });\n    };\n\n    // Função para criar um novo processo\n    const handleCreateProcess = () => {\n        if (!newProcessTitle || !newProcessType) {\n            alert('Please provide a title and select a process type.');\n            return;\n        }\n\n        const newProcess = {\n            title: newProcessTitle,\n            status: 'publish',\n            type: 'process_obatala',\n            process_type: newProcessType,\n            current_stage: null,\n        };\n\n        apiFetch({ path: `/wp/v2/process_obatala`, method: 'POST', data: newProcess })\n            .then(savedProcess => {\n                setProcesses([...processes, savedProcess]);\n                setNewProcessTitle('');\n                setNewProcessType('');\n                // Seleciona o processo apenas quando clicado explicitamente\n                // onSelectProcess(savedProcess.id);\n            })\n            .catch(error => {\n                console.error('Error creating process:', error);\n            });\n    };\n\n    // Função para selecionar um processo e redirecionar para o ProcessViewer\n    const handleSelectProcess = (processId) => {\n        setSelectedProcessId(processId);\n        onSelectProcess(processId);\n    };\n\n    // Renderização condicional com base no estado de carregamento\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    // Renderiza a lista de processos ou o ProcessViewer dependendo do estado de selectedProcessId\n    return (\n        <div>\n            <span className=\"brand\"><strong>Obatala</strong> Curatorial Process Management</span>\n            <h2>Process Manager</h2>\n            <div className=\"panel-container\">\n                <main>\n                    <Panel>\n                        <PanelHeader>Existing Processes</PanelHeader>\n                        <PanelRow>\n                            {processes.length > 0 ? (\n                                <table className=\"wp-list-table widefat fixed striped\">\n                                    <thead>\n                                        <tr>\n                                            <th>Process Title</th>\n                                            <th>Process Type</th>\n                                            <th>Status</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                    {processes.map(process => (\n                                        <tr key={process.id}>\n                                            <td>{process.title.rendered}</td>\n                                            <td>{process.process_type ? 'Process type title' : ''}</td>\n                                            <td><span className=\"badge success\">{process.status}</span></td>\n                                            <td>\n                                                <Button isSecondary onClick={() => handleSelectProcess(process.id)}>\n                                                    View\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </table>\n                            ) : (\n                                <Notice isDismissible={false} status=\"warning\">No existing processes.</Notice>\n                            )}\n                        </PanelRow>\n                    </Panel>\n                </main>\n                <aside>\n                    <Panel>\n                        <PanelHeader>Create Process</PanelHeader>\n                        <PanelRow>\n                            <TextControl\n                                label=\"Process Title\"\n                                value={newProcessTitle}\n                                onChange={(value) => setNewProcessTitle(value)}\n                            />\n                            <SelectControl\n                                label=\"Process Type\"\n                                value={newProcessType}\n                                options={[\n                                    { label: 'Select a process type...', value: '' },\n                                    ...processTypes.map(type => ({ label: type.title.rendered, value: type.id }))\n                                ]}\n                                onChange={(value) => setNewProcessType(value)}\n                            />\n                            <Button isPrimary onClick={handleCreateProcess}>Create Process</Button>\n                        </PanelRow>\n                    </Panel>\n                </aside>\n            </div>\n            {/* Renderiza o ProcessViewer apenas se selectedProcessId estiver definido */}\n            {selectedProcessId && (\n                onSelectProcess(selectedProcessId)\n            )}\n        </div>\n    );\n};\n\nexport default ProcessManager;\n","import React, { useState, useEffect } from 'react';\nimport { Spinner, Button, SelectControl, TextControl, Notice, Panel, PanelHeader, PanelBody, PanelRow, Icon, Modal, DatePicker, RadioControl } from '@wordpress/components';\nimport apiFetch from '@wordpress/api-fetch';\nimport { edit, trash } from \"@wordpress/icons\";\nimport { MediaUpload, MediaUploadCheck } from '@wordpress/block-editor';\n\nconst ProcessStepManager = () => {\n    // Estado para armazenar os passos de processo\n    const [processSteps, setProcessSteps] = useState([]);\n\n    const [editingStep, setEditingStep] = useState(null);\n    const [notice, setNotice] = useState(null);\n\n    // Estado para armazenar os tipos de processo\n    const [processTypes, setProcessTypes] = useState([]);\n    // Estado para armazenar o título do novo passo de processo\n    const [newStepTitle, setNewStepTitle] = useState('');\n    // Estado para armazenar o tipo do novo passo de processo\n    const [newStepType, setNewStepType] = useState('');\n    // Estado para armazenar os campos dinâmicos para os metadados\n    const [dynamicFields, setDynamicFields] = useState([{ name: '', type: 'text', value: '' }]);\n    // Estado para controlar o carregamento\n    const [isLoading, setIsLoading] = useState(true);\n    // Estado para o índice do campo dinâmico atualmente em modo de edição\n    const [editableFieldIndex, setEditableFieldIndex] = useState(-1);\n\n    // Carrega os passos de processo e tipos de processo ao inicializar\n    useEffect(() => {\n        fetchProcessSteps();\n    }, []);\n\n    // Função para buscar os passos de processo da API WordPress\n    const fetchProcessSteps = () => {\n        setIsLoading(true);\n        apiFetch({ path: `/wp/v2/process_step?per_page=100&_embed` })\n            .then(data => {\n                setProcessSteps(data);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching process steps:', error);\n                setIsLoading(false);\n            });\n    };\n\n    // Função para criar um novo passo de processo\n    const handleSaveStep = () => {\n        if (!newStepTitle) {\n            setNotice({ status: 'error', message: 'Step Title field cannot be empty.' });\n            return;\n        }\n\n        const requestData = {\n            title: newStepTitle,\n            status: 'publish',\n            type: 'process_step',\n        };\n\n        if (editingStep) {\n            apiFetch({ path: `/wp/v2/process_step/${editingStep}`, method: 'PUT', data: requestData })\n                .then(updatedStep => {\n                    const updatedProcessSteps = processSteps.map(step =>\n                        step.id === editingStep ? updatedStep : step\n                    );\n                    setProcessSteps(updatedProcessSteps);\n                    setEditingStep(null);\n                    setNewStepTitle('');\n                    setNotice(null);\n\n                    const stepId = savedStep.id;\n                    const metaData = dynamicFields.map(field => ({\n                        key: field.name,\n                        value: getDefaultFieldValue(field.type) // Define o valor padrão conforme o tipo\n                    }));\n        \n                    // Salva os metadados do novo passo\n                    saveMetadata(stepId, metaData)\n                        .then(() => {\n                            // Atualiza a lista de passos de processo após salvar com sucesso\n                            fetchProcessSteps();\n                            // Limpa os campos de entrada após salvar\n                            setNewStepTitle('');\n                            setNewStepType('');\n                            setDynamicFields([{ name: '', type: 'text', value: '' }]);\n                        })\n                        .catch(error => {\n                            console.error('Error saving metadata:', error);\n                        });\n                })\n                .catch(error => {\n                    console.error('Error updating process step:', error);\n                });\n        } else {\n            apiFetch({ path: `/wp/v2/process_step`, method: 'POST', data: requestData })\n                .then(savedStep => {\n                    setProcessSteps([...processSteps, savedStep]);\n                    setNewStepTitle('');\n\n                    const stepId = savedStep.id;\n                    const metaData = dynamicFields.map(field => ({\n                        key: field.name,\n                        value: getDefaultFieldValue(field.type) // Define o valor padrão conforme o tipo\n                    }));\n\n                    // Salva os metadados do novo passo\n                    saveMetadata(stepId, metaData)\n                    .then(() => {\n                        // Atualiza a lista de passos de processo após salvar com sucesso\n                        fetchProcessSteps();\n                        // Limpa os campos de entrada após salvar\n                        setNewStepTitle('');\n                        setNewStepType('');\n                        setDynamicFields([{ name: '', type: 'text', value: '' }]);\n                    })\n                    .catch(error => {\n                        console.error('Error saving metadata:', error);\n                    });\n                })\n                .catch(error => {\n                    console.error('Error creating process step:', error);\n                });\n        }\n    };\n\n    const handleEditStep = (stepId, currentTitle) => {\n        setEditingStep(stepId);\n        setNewStepTitle(currentTitle);\n    };\n\n    const handleCancel = () => {\n        setEditingStep(null);\n        setNewStepTitle('');\n        setNotice(null);\n    };\n\n    // Função para salvar metadados do passo de processo\n    const saveMetadata = (stepId, metaData) => {\n        return new Promise((resolve, reject) => {\n            apiFetch({\n                path: `/wp-admin/admin-ajax.php`,\n                method: 'POST',\n                data: {\n                    action: 'save_metadata',\n                    step_id: stepId,\n                    meta_data: metaData\n                }\n            })\n            .then(response => {\n                if (response.success) {\n                    resolve();\n                } else {\n                    reject('Error saving metadata:', response.data);\n                }\n            })\n            .catch(error => {\n                reject('Error saving metadata:', error);\n            });\n        });\n    };\n\n    // Função para lidar com a mudança de campo dinâmico\n    const handleDynamicFieldChange = (index, field, value) => {\n        const updatedFields = [...dynamicFields];\n        updatedFields[index][field] = value;\n        setDynamicFields(updatedFields);\n    };\n\n    // Função para adicionar um novo campo dinâmico\n    const handleAddField = () => {\n        setDynamicFields([...dynamicFields, { name: '', type: 'text', value: '' }]);\n    };\n\n    // Função para remover um campo dinâmico\n    const handleRemoveField = (index) => {\n        const updatedFields = dynamicFields.filter((_, idx) => idx !== index);\n        setDynamicFields(updatedFields);\n    };\n\n    // Função para obter o valor padrão conforme o tipo do campo\n    const getDefaultFieldValue = (type) => {\n        switch (type) {\n            case 'text':\n            case 'textfield':\n            case 'number':\n                return '';\n            case 'datepicker':\n                return null; // Exemplo de valor padrão para datepicker\n            case 'upload':\n                return ''; // Exemplo de valor padrão para upload\n            case 'select':\n                return ''; // Exemplo de valor padrão para select\n            case 'radio':\n                return ''; // Exemplo de valor padrão para radio\n            default:\n                return '';\n        }\n    };\n\n    // Função para iniciar a edição do nome do campo dinâmico\n    const startEditFieldName = (index) => {\n        setEditableFieldIndex(index);\n    };\n\n    // Função para finalizar a edição do nome do campo dinâmico\n    const finishEditFieldName = (index, newName) => {\n        const updatedFields = [...dynamicFields];\n        updatedFields[index].name = newName;\n        setDynamicFields(updatedFields);\n        setEditableFieldIndex(-1);\n    };\n\n    // Renderiza um spinner enquanto os dados estão sendo carregados\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    return (\n        <div>\n            {/* Título e cabeçalho da página */}\n            <span className=\"brand\"><strong>Obatala</strong> Curatorial Process Management</span>\n            <h2>Step Manager</h2>\n            <div className=\"panel-container\">\n                <main>\n                     {/* Painel com os passos de processo existentes */}\n                    <Panel>\n                        <PanelHeader>Existing Steps</PanelHeader>\n                        <PanelRow>\n                            {/* Lista os passos de processo existentes */}\n                            {processSteps.length > 0 ? (\n                                <table className=\"wp-list-table widefat fixed striped\">\n                                    <thead>\n                                        <tr>\n                                            <th>Step Title</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {processSteps.map(step => (\n                                            <tr key={step.id}>\n                                                <td>{step.title.rendered}</td>\n                                                <td>\n                                                    <Button\n                                                        icon={<Icon icon={edit} />}\n                                                        onClick={() => handleEditStep(step.id, step.title.rendered)}\n                                                    />\n                                                </td>\n                                            </tr>\n                                        ))}    \n                                    </tbody>\n                                </table>\n                            ) : (\n                                // Aviso se não houver passos de processo existentes\n                                <Notice isDismissible={false} status=\"warning\">No existing process steps.</Notice>\n                            )}\n                        </PanelRow>\n                    </Panel>\n                </main>\n                <aside>\n                     {/* Painel para criar um novo passo de processo */}\n                    <Panel>\n                        <PanelHeader>Add Step</PanelHeader>\n                        <PanelBody title=\"Main data\">\n                            <PanelRow>\n                                {/* Formulário para inserir título e tipo de processo do novo passo */}\n                                {notice && !editingStep && (\n                                    <Notice status={notice.status} isDismissible onRemove={() => setNotice(null)}>\n                                        {notice.message}\n                                    </Notice>\n                                )}\n                                <TextControl\n                                    label=\"Step Title\"\n                                    value={newStepTitle}\n                                    onChange={(value) => setNewStepTitle(value)}\n                                />\n                                <Button isPrimary onClick={handleSaveStep}>\n                                    Add Step\n                                </Button>\n                            </PanelRow>\n                        </PanelBody>\n                        <PanelBody title=\"Metadata\" className=\"counter-container\">\n                            {/* Renderiza os campos dinâmicos para os metadados */}\n                            {dynamicFields.map((field, index) => (\n                                <PanelRow key={index} className=\"counter-item\">\n                                    <Button icon={<Icon icon={trash} />} isDestructive onClick={() => handleRemoveField(index)} />\n                                    <TextControl\n                                        label=\"Title\"\n                                        value={field.name || `Metadata Name ${index + 1}`}\n                                        onChange={(e) => handleDynamicFieldChange(index, 'name', e.target.value)}\n                                        onBlur={() => finishEditFieldName(index, dynamicFields[index].name)}\n                                        autoFocus\n                                    />\n                                    <SelectControl\n                                        label=\"Type\"\n                                        value={field.type}\n                                        options={[\n                                            { label: 'Text', value: 'text' },\n                                            { label: 'Date Picker', value: 'datepicker' },\n                                            { label: 'Upload', value: 'upload' },\n                                            { label: 'Number', value: 'number' },\n                                            { label: 'Text Field', value: 'textfield' },\n                                            { label: 'Select', value: 'select' },\n                                            { label: 'Radio', value: 'radio' },\n                                        ]}\n                                        onChange={(value) => handleDynamicFieldChange(index, 'type', value)}\n                                    />\n                                </PanelRow>\n                                \n                            ))}\n                            <PanelRow>\n                                <Button isSecondary onClick={handleAddField}>Add Metadata</Button>\n                            </PanelRow>\n                        </PanelBody>\n\n                        <PanelRow>\n                            <Button isPrimary onClick={handleSaveStep}>Add Step</Button>\n                        </PanelRow>\n                    </Panel>\n                </aside>\n            </div>\n            {editingStep && (\n                <Modal\n                    title=\"Edit Process Step\"\n                    onRequestClose={handleCancel}\n                    isDismissible={true}\n                >\n                    {notice && editingStep && (\n                        <Notice status={notice.status} isDismissible onRemove={() => setNotice(null)}>\n                            {notice.message}\n                        </Notice>\n                    )}\n                    <TextControl\n                        label=\"Step Title\"\n                        value={newStepTitle}\n                        onChange={(value) => setNewStepTitle(value)}\n                    />\n                    <Button isPrimary onClick={handleSaveStep}>\n                        Save\n                    </Button>\n                    <Button onClick={handleCancel}>\n                        Cancel\n                    </Button>\n                </Modal>\n            )}\n        </div>\n    );\n};\n\nexport default ProcessStepManager;\n","import { useState, useEffect, useReducer } from 'react';\nimport {\n    Panel,\n    PanelHeader,\n    Spinner,\n    __experimentalConfirmDialog as ConfirmDialog\n    } from '@wordpress/components';\nimport apiFetch from '@wordpress/api-fetch';\nimport ProcessTypeForm from './ProcessTypeManager/ProcessTypeForm';\nimport ProcessTypeList from './ProcessTypeManager/ProcessTypeList';\nimport ProcessStepForm from './ProcessTypeManager/ProcessStepForm';\nimport Reducer, { initialState } from '../redux/reducer'; \n\n\nconst ProcessTypeManager = () => {\n    const [processTypes, setProcessTypes] = useState([]);\n    const [processSteps, setProcessSteps] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [editingProcessType, setEditingProcessType] = useState(null);\n    const [state, dispatch] = useReducer(Reducer, initialState);\n\n      \n    useEffect(() => {\n        fetchProcessTypes();\n        fetchProcessSteps();\n    }, []);\n\n    const fetchProcessTypes = () => {\n        setIsLoading(true);\n        apiFetch({ path: `/wp/v2/process_type?per_page=100&_embed` })\n            .then(data => {\n                console.log('Fetched Process Types:', data);\n                setProcessTypes(data);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching process types:', error);\n                setIsLoading(false);\n            });\n    };\n\n    const fetchProcessSteps = () => {\n        apiFetch({ path: `/wp/v2/process_step?per_page=100&_embed` })\n            .then(data => {\n                console.log('Fetched Process Steps:', data);\n                setProcessSteps(data);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching process steps:', error);\n                setIsLoading(false);\n            });\n    };\n\n    const handleSaveProcessType = (processType) => {\n        if (editingProcessType) {\n            apiFetch({ path: `/wp/v2/process_type/${editingProcessType.id}`, method: 'PUT', data: processType })\n                .then(savedProcessType => {\n                    const updatedProcessTypes = processTypes.map(type => type.id === savedProcessType.id ? savedProcessType : type);\n                    setProcessTypes(updatedProcessTypes);\n                    setEditingProcessType(null);\n                })\n                .catch(error => {\n                    console.error('Error updating process type:', error);\n                });\n        } else {\n            apiFetch({ path: `/wp/v2/process_type`, method: 'POST', data: processType })\n                .then(savedProcessType => {\n                    setProcessTypes([...processTypes, savedProcessType]);\n                })\n                .catch(error => {\n                    console.error('Error adding process type:', error);\n                });\n        }\n    };\n\n    const handleDeleteProcessType = (id) => {\n        apiFetch({ path: `/wp/v2/process_type/${id}`, method: 'DELETE' })\n            .then(() => {\n                const updatedProcessTypes = processTypes.filter(type => type.id !== id);\n                setProcessTypes(updatedProcessTypes);\n            })\n            .catch(error => {\n                console.error('Error deleting process type:', error);\n            });\n    };\n\n    const handleEditProcessType = (processType) => {\n        setEditingProcessType(processType);\n    };\n\n    const handleAddProcessStep = (step) => {\n        const { id, process_type } = step;\n\n         // Verifica se já existe uma associação com base no ID da etapa e no ID do tipo de processo\n        const existingStep = processSteps.find(existing => existing.id === id && existing.process_type === process_type);\n    \n        if (existingStep) {\n            console.log('Associação já existe:', existingStep);\n            return; \n        }\n    \n        // Se não existe, adicionar uma nova associação\n        apiFetch({ path: `/wp/v2/process_step/${id}`, method: 'PUT', data: step })\n            .then(updatedProcessStep => {\n                setProcessSteps([...processSteps, updatedProcessStep]);\n            })\n            .catch(error => {\n                console.error('Error updating process step:', error);\n            });\n    };\n    \n\n    const handleDeleteProcessStep = (id) => {\n        apiFetch({ path: `/wp/v2/process_step/${id}`, method: 'DELETE' })\n                .then(() => {\n                    const updatedProcessSteps = processSteps.filter(step => step.id !== id);\n                    setProcessSteps(updatedProcessSteps);\n                    \n                })\n                .catch(error => {\n                    console.error('Error deleting process step:', error);\n                });\n    }; \n\n    const handleConfirmDeleteType = (id) => {\n        dispatch({ type: 'OPEN_MODAL_PROCESS_TYPE', payload: id });\n    };\n\n    const handleConfirmDeleteStep = (id) => {\n        dispatch({ type: 'OPEN_MODAL_STEP', payload: id });\n    };\n     \n    const handleCancel = () => {\n        dispatch({ type: 'CLOSE_MODAL' });\n    }; \n\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    return (\n            <div>\n            <span className=\"brand\"><strong>Obatala</strong> Curatorial Process Management</span>\n            <h2>Process Type Manager</h2>\n            <div className=\"panel-container\">\n                <main>\n                     <ConfirmDialog\n                        isOpen={ state.isOpen }\n                        onConfirm={() => {\n                            if (state.deleteProcessType) {\n                                handleDeleteProcessType(state.deleteProcessType);\n                            } else if (state.deleteStep) {\n                                handleDeleteProcessStep(state.deleteStep);\n                            }\n                            dispatch({ type: 'CLOSE_MODAL' });\n                        }}\n                        onCancel={handleCancel}\n                    >   \n                        Are you sure you want to delete this {state.deleteProcessType ? 'Process Type' : 'Step' }?\n\n                    </ConfirmDialog>\n\n                    <ProcessTypeList \n                        processTypes={processTypes} \n                        processSteps={processSteps} \n                        onEdit={handleEditProcessType} \n                        onDelete={handleConfirmDeleteType} \n                        onDeleteStep={handleConfirmDeleteStep}\n                    />\n                </main>\n                <aside>\n                    <Panel>\n                        <PanelHeader>Managing process types</PanelHeader>\n                        <ProcessTypeForm onSave={handleSaveProcessType} onCancel={() => setEditingProcessType(null)} editingProcessType={editingProcessType} />    \n                        <ProcessStepForm processTypes={processTypes} processSteps={processSteps} onAddStep={handleAddProcessStep} />\n                    </Panel>\n                </aside>\n            </div>\n        </div>\n      \n    );\n};\n\nexport default ProcessTypeManager;","import { useState } from 'react';\nimport { Button, TextControl, SelectControl, Panel, PanelBody, PanelRow, Notice } from '@wordpress/components';\n\nconst ProcessStepForm = ({ processTypes, processSteps, onAddStep }) => {\n    const [selectedProcessType, setSelectedProcessType] = useState('');\n    const [selectedStep, setSelectedStep] = useState('');\n    const [notice, setNotice] = useState(null);\n\n    const handleAddStep = () => {\n        if (!selectedProcessType || !selectedStep) {\n            setNotice({ status: 'error', message: 'Please select both a process type and a step.' });\n            return;\n        }\n\n        const step = processSteps.find(step => step.title.rendered === selectedStep);\n\n        const newStep = {\n            id: step.id, // Use the ID of the existing step\n            title: step.title.rendered,\n            status: 'publish',\n            process_type: selectedProcessType,\n        };\n\n        onAddStep(newStep);\n        setSelectedProcessType('');\n        setSelectedStep('');\n    };\n\n    return (\n        <PanelBody title=\"Add Process Step\" initialOpen={ true }>\n            <PanelRow>\n            {notice && (\n                <Notice status={notice.status} isDismissible onRemove={() => setNotice(null)}>\n                    {notice.message}\n                </Notice>\n                )}\n                <SelectControl\n                    label=\"Select Step\"\n                    value={selectedStep}\n                    options={[\n                        { label: 'Select a step...', value: '' },\n                        ...processSteps.map(step => ({ label: step.title.rendered, value: step.title.rendered }))\n                    ]}\n                    onChange={(value) => setSelectedStep(value)}\n                />\n                <SelectControl\n                    label=\"Select Process Type\"\n                    value={selectedProcessType}\n                    options={[\n                        { label: 'Select a process type...', value: '' },\n                        ...processTypes.map(type => ({ label: type.title.rendered, value: type.id }))\n                    ]}\n                    onChange={(value) => setSelectedProcessType(value)}\n                />\n                <Button isSecondary onClick={handleAddStep}>\n                    Add Process Step\n                </Button>\n            </PanelRow>\n        </PanelBody>\n    );\n};\n\nexport default ProcessStepForm;\n","import { useState, useEffect } from 'react';\nimport { Button, TextControl, TextareaControl, CheckboxControl, PanelBody, PanelRow, Notice } from '@wordpress/components';\n\nconst ProcessTypeForm = ({ onSave, onCancel, editingProcessType }) => {\n    const [processTypeName, setProcessTypeName] = useState('');\n    const [processTypeDescription, setProcessTypeDescription] = useState('');\n    const [acceptAttachments, setAcceptAttachments] = useState(false);\n    const [acceptTainacanItems, setAcceptTainacanItems] = useState(false);\n    const [generateTainacanItems, setGenerateTainacanItems] = useState(false);\n    const [notice, setNotice] = useState(null);\n\n\n    useEffect(() => {\n        if (editingProcessType) {\n            setProcessTypeName(editingProcessType.title.rendered);\n            setProcessTypeDescription(editingProcessType.description || '');\n            setAcceptAttachments(editingProcessType.accept_attachments ?? false);\n            setAcceptTainacanItems(editingProcessType.accept_tainacan_items ?? false);\n            setGenerateTainacanItems(editingProcessType.generate_tainacan_items ?? false);\n        }\n    }, [editingProcessType]);\n\n    const handleSave = () => {\n        if (!processTypeName || !processTypeDescription) {\n            setNotice({ status: 'error', message: 'Field Name and Description cannot be empty.' });\n            return;\n        }\n\n        const processType = {\n            status: 'publish',\n            title: processTypeName,\n            description: processTypeDescription,\n            accept_attachments: acceptAttachments,\n            accept_tainacan_items: acceptTainacanItems,\n            generate_tainacan_items: generateTainacanItems,\n        };\n        onSave(processType);\n\n        if (!editingProcessType) {\n            handleResetForm();\n        }\n        \n    };\n\n    const handleResetForm = () => {\n        setProcessTypeName('');\n        setProcessTypeDescription('');\n        setAcceptAttachments(false);\n        setAcceptTainacanItems(false);\n        setGenerateTainacanItems(false);\n    }\n\n    const handleCancel = () => {\n        onCancel();\n        setProcessTypeName('');\n        setProcessTypeDescription('');\n        setAcceptAttachments(false);\n        setAcceptTainacanItems(false);\n        setGenerateTainacanItems(false);\n    };\n\n    return (\n        <PanelBody title=\"Add Process Type\" initialOpen={ true }>\n            \n            <PanelRow>\n                {notice && (\n                <Notice status={notice.status} isDismissible onRemove={() => setNotice(null)}>\n                    {notice.message}\n                </Notice>\n                )}\n                <TextControl\n                    label=\"Process Type Name\"\n                    value={processTypeName}\n                    onChange={(value) => setProcessTypeName(value)}\n                />\n                <TextareaControl\n                    label=\"Process Type Description\"\n                    value={processTypeDescription}\n                    onChange={(value) => setProcessTypeDescription(value)}\n                />\n                <CheckboxControl\n                    label=\"Accept Attachments\"\n                    checked={acceptAttachments}\n                    onChange={(value) => setAcceptAttachments(value)}\n                />\n                <CheckboxControl\n                    label=\"Accept Tainacan Items\"\n                    checked={acceptTainacanItems}\n                    onChange={(value) => setAcceptTainacanItems(value)}\n                />\n                <CheckboxControl\n                    label=\"Generate Tainacan Items\"\n                    checked={generateTainacanItems}\n                    onChange={(value) => setGenerateTainacanItems(value)}\n                />\n                {editingProcessType ? (\n                    <>\n                        <Button isPrimary onClick={handleSave}>\n                            Update Process Type\n                        </Button>\n                        <Button onClick={handleCancel}>\n                            Cancel\n                        </Button>\n                    </>\n                ) : (\n                    <Button isPrimary onClick={handleSave}>\n                        Add Process Type\n                    </Button>\n                )}\n            </PanelRow>\n        </PanelBody>\n    );\n};\n\nexport default ProcessTypeForm;","import { useEffect, useState } from 'react';\nimport { Draggable, Button, Icon, Tooltip, Card, CardBody, CardHeader, CardFooter, Notice, Panel, PanelHeader, PanelRow } from \"@wordpress/components\";\nimport { edit, trash } from \"@wordpress/icons\";\n\nconst ProcessTypeList = ({\n  processTypes,\n  processSteps,\n  onEdit,\n  onDelete,\n  onDeleteStep,\n}) => {\n    const [stepsState, setStepsState] = useState({});\n\n    useEffect(() => {\n        const initialStepsState = processTypes.reduce((acc, type) => {\n        acc[type.id] = processSteps.filter((step) => +step.process_type === type.id);\n        return acc;\n        }, {});\n        setStepsState(initialStepsState);\n    }, [processTypes, processSteps]);\n\n    const handleDragStart = (event, typeId, stepId) => {\n        event.dataTransfer.setData('typeId', typeId.toString());\n        event.dataTransfer.setData('stepId', stepId.toString());\n        console.log('Drag started in step', stepId);\n    };\n\n    const handleDrop = async (event, dropIndex) => {\n        event.preventDefault();\n        const draggedTypeId = event.dataTransfer.getData('typeId');\n        const draggedStepId = event.dataTransfer.getData('stepId');\n\n        if (!stepsState[draggedTypeId]) {\n        console.error(`Steps for typeId ${draggedTypeId} not found.`);\n        return;\n        }\n\n        const draggedStepIndex = stepsState[draggedTypeId].findIndex(step => step.id === parseInt(draggedStepId, 10));\n        const updatedSteps = [...stepsState[draggedTypeId]];\n        const [draggedStep] = updatedSteps.splice(draggedStepIndex, 1);\n        updatedSteps.splice(dropIndex, 0, draggedStep);\n\n        setStepsState({\n        ...stepsState,\n        [draggedTypeId]: updatedSteps,\n        });\n\n        console.log(`Step ${draggedStepId} dropped to index: ${dropIndex}`);\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <Panel>\n            <PanelHeader>Existing Process Types</PanelHeader>\n            <PanelRow>\n                {processTypes.length > 0 ? (\n                    <div className=\"card-container\">\n                    {processTypes.map((type) => {\n                        const steps = stepsState[type.id] || [];\n\n                        return (\n                        <Card key={type.id}>\n                            <CardHeader>\n                            <h4 className=\"card-title\">{type.title.rendered}</h4>\n                            </CardHeader>\n                            <CardBody>\n                            <dl className=\"description-list\">\n                                <div className=\"list-item\">\n                                <dt>Description:</dt>\n                                <dd>\n                                    {type.description ? type.description.split('\\n').map((item, key) => ( <span key={key}>{item}<br /></span> )) : \"-\"}\n                                </dd>\n                                </div>\n                            </dl>\n\n                            <p className={type.accept_attachments ? \"check true\" : \"check false\"}>\n                                {!type.accept_attachments && (\n                                <span className=\"visually-hidden\">Not</span>\n                                )}{\" \"}\n                                Accept attachments\n                            </p>\n                            <p className={type.accept_tainacan_items ? \"check true\" : \"check false\"}>\n                                {!type.accept_tainacan_items && (\n                                <span className=\"visually-hidden\">Not</span>\n                                )}{\" \"}\n                                Accept Tainacan items\n                            </p>\n                            <p className={type.generate_tainacan_items ? \"check true\" : \"check false\"}>\n                                {!type.generate_tainacan_items && (\n                                <span className=\"visually-hidden\">Not</span>\n                                )}{\" \"}\n                                Generate Tainacan items\n                            </p>\n\n                            {steps.length > 0 && (\n                                <>\n                                <hr />\n                                <h5>Steps</h5>\n                                <ol className=\"list-group\">\n                                    {steps.map((step, index) => (\n                                    <Draggable\n                                        key={step.id}\n                                        elementId={`step-${step.id}`}\n                                        appendToOwnerDocument={true}\n                                        transferData={{ typeId: type.id, stepId: step.id }}\n                                        onDragStart={(event) => handleDragStart(event, type.id, step.id)}\n                                    >\n                                        {({ onDraggableStart, onDraggableEnd }) => (\n                                        <li\n                                            className=\"list-group-item\"\n                                            id={`step-${step.id}`}\n                                            draggable=\"true\"\n                                            onDragOver={handleDragOver}\n                                            onDrop={(event) => handleDrop(event, index, type.id)}\n                                            onDragStart={(event) => handleDragStart(event, type.id, step.id)}\n                                        >\n                                            {step.title.rendered}\n                                            <Tooltip text=\"Delete Step\">\n                                            <Button\n                                                isDestructive\n                                                icon={<Icon icon={trash} />}\n                                                onClick={() => onDeleteStep(step.id)}\n                                            />\n                                            </Tooltip>\n                                        </li>\n                                        )}\n                                    </Draggable>\n                                    ))}\n                                </ol>\n                                </>\n                            )}\n                            </CardBody>\n                            <CardFooter>\n                            <Tooltip text=\"Edit\">\n                                <Button\n                                icon={<Icon icon={edit} />}\n                                onClick={() => onEdit(type)}\n                                />\n                            </Tooltip>\n                            <Tooltip text=\"Delete\">\n                                <Button\n                                icon={<Icon icon={trash} />}\n                                onClick={() => onDelete(type.id)}\n                                />\n                            </Tooltip>\n                            </CardFooter>\n                        </Card>\n                        );\n                    })}\n                    </div>\n                ) : (\n                    <Notice isDismissible={false} status=\"warning\">No existing processes types.</Notice>\n                )}\n            </PanelRow>\n        </Panel>\n    );\n};\n\nexport default ProcessTypeList;\n","import { useState, useEffect } from 'react';\nimport { Spinner, Notice, Panel, PanelHeader, PanelBody, PanelRow } from '@wordpress/components';\nimport apiFetch from '@wordpress/api-fetch';\n\nconst ProcessViewer = () => {\n    const [process, setProcess] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [processTypes, setProcessTypes] = useState([]);\n    const [processSteps, setProcessSteps] = useState([]);\n\n    const getProcessIdFromUrl = () => {\n        const urlParams = new URLSearchParams(window.location.search);\n        return urlParams.get('process_id');\n    };\n\n    useEffect(() => {\n        const processId = getProcessIdFromUrl();\n        if (processId) {\n            fetchProcess(processId);\n            fetchProcessTypes();\n            fetchProcessSteps();\n        } else {\n            setError('No process ID found in the URL.');\n            setIsLoading(false);\n        }\n    }, []);\n\n    const fetchProcess = (processId) => {\n        setIsLoading(true);\n        apiFetch({ path: `/wp/v2/process_obatala/${processId}?_embed` })\n            .then(data => {\n                setProcess(data);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching process:', error);\n                setError('Error fetching process details.');\n                setIsLoading(false);\n            });\n    };\n\n    const fetchProcessTypes = () => {\n        setIsLoading(true);\n        apiFetch({ path: `/wp/v2/process_type?per_page=100&_embed` })\n            .then(data => {\n                setProcessTypes(data);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching process types:', error);\n                setIsLoading(false);\n            });\n    };\n\n    const fetchProcessSteps = () => {\n        setIsLoading(true);\n        apiFetch({ path: `/wp/v2/process_step?per_page=100&_embed` })\n            .then(data => {\n                setProcessSteps(data);\n                setIsLoading(false);\n            })\n            .catch(error => {\n                console.error('Error fetching process steps:', error);\n                setIsLoading(false);\n            });\n    };\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    if (error) {\n        return <Notice status=\"error\" isDismissible={false}>{error}</Notice>;\n    }\n\n    if (!process) {\n        return <Notice status=\"warning\" isDismissible={false}>No process found.</Notice>;\n    }\n\n    // Filtrar as etapas pelo tipo de processo atual\n    const filteredSteps = processSteps.filter(step => step.process_type === process.process_type);\n\n    return (\n        <div>\n            <span className=\"brand\"><strong>Obatala</strong> Curatorial Process Viewer</span>\n            <h2>{process.process_type ? 'Process type title' : ''}: {process.title.rendered}</h2>\n            <div className=\"badge-container\">\n                <span className=\"badge success\">{process.status}</span>\n                <span className=\"badge\">Current step</span>\n            </div>\n\n            <div className=\"panel-container\">\n                <main className=\"counter-container\">\n                    {filteredSteps.length > 0 ? (\n                        filteredSteps.map((step, index) => (\n                            <Panel key={step.id} className=\"counter-item\">\n                                <PanelHeader>{step.title.rendered}<span className=\"badge success\">Completed</span><small>Completed at 21/04/2024 by João Silva</small></PanelHeader>\n                                <PanelBody title=\"History\" initialOpen={false}>\n                                    <PanelRow>\n                                        {/* Renderizar histórico aqui, se houver */}\n                                    </PanelRow>\n                                </PanelBody>\n                                <PanelBody title=\"Comments\" initialOpen={false}>\n                                    <PanelRow>\n                                        {/* Renderizar comentários aqui, se houver */}\n                                    </PanelRow>\n                                </PanelBody>\n                            </Panel>\n                        ))\n                    ) : (\n                        <Notice status=\"warning\" isDismissible={false}>No steps found for this process type.</Notice>\n                    )}\n                </main>\n            </div>\n        </div>\n    );\n};\n\nexport default ProcessViewer;\n","export const initialState = {\n    isOpen: false, \n    deleteProcessType: null,\n    deleteStep: null, \n};\n \nfunction Reducer(state = initialState, action) {\n    switch (action.type) {\n      case 'OPEN_MODAL_PROCESS_TYPE':\n        return { ...state, isOpen: true, deleteProcessType: action.payload };\n      case 'OPEN_MODAL_STEP':\n        return { ...state, isOpen: true, deleteStep: action.payload };\n      case 'CLOSE_MODAL':\n        return { ...state, isOpen: false, deleteProcessType: null, deleteStep: null };\n      default:\n        return state;\n    }\n}\n \nexport default Reducer;","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["render","ProcessManager","ProcessTypeManager","ProcessStepManager","ProcessViewer","navigateToProcessViewer","processId","window","location","href","document","addEventListener","processElement","getElementById","processTypeElement","processStepElement","processViewerElement","createElement","onSelectProcess","useState","useEffect","Spinner","Button","SelectControl","TextControl","Notice","Panel","PanelHeader","PanelRow","apiFetch","processTypes","setProcessTypes","processes","setProcesses","isLoading","setIsLoading","newProcessTitle","setNewProcessTitle","newProcessType","setNewProcessType","selectedProcessId","setSelectedProcessId","fetchProcessTypes","fetchProcesses","path","then","data","catch","error","console","handleCreateProcess","alert","newProcess","title","status","type","process_type","current_stage","method","savedProcess","handleSelectProcess","className","length","map","process","key","id","rendered","isSecondary","onClick","isDismissible","label","value","onChange","options","isPrimary","React","PanelBody","Icon","Modal","DatePicker","RadioControl","edit","trash","MediaUpload","MediaUploadCheck","processSteps","setProcessSteps","editingStep","setEditingStep","notice","setNotice","newStepTitle","setNewStepTitle","newStepType","setNewStepType","dynamicFields","setDynamicFields","name","editableFieldIndex","setEditableFieldIndex","fetchProcessSteps","handleSaveStep","message","requestData","updatedStep","updatedProcessSteps","step","stepId","savedStep","metaData","field","getDefaultFieldValue","saveMetadata","handleEditStep","currentTitle","handleCancel","Promise","resolve","reject","action","step_id","meta_data","response","success","handleDynamicFieldChange","index","updatedFields","handleAddField","handleRemoveField","filter","_","idx","startEditFieldName","finishEditFieldName","newName","icon","onRemove","isDestructive","e","target","onBlur","autoFocus","onRequestClose","useReducer","__experimentalConfirmDialog","ConfirmDialog","ProcessTypeForm","ProcessTypeList","ProcessStepForm","Reducer","initialState","editingProcessType","setEditingProcessType","state","dispatch","log","handleSaveProcessType","processType","savedProcessType","updatedProcessTypes","handleDeleteProcessType","handleEditProcessType","handleAddProcessStep","existingStep","find","existing","updatedProcessStep","handleDeleteProcessStep","handleConfirmDeleteType","payload","handleConfirmDeleteStep","isOpen","onConfirm","deleteProcessType","deleteStep","onCancel","onEdit","onDelete","onDeleteStep","onSave","onAddStep","selectedProcessType","setSelectedProcessType","selectedStep","setSelectedStep","handleAddStep","newStep","initialOpen","TextareaControl","CheckboxControl","processTypeName","setProcessTypeName","processTypeDescription","setProcessTypeDescription","acceptAttachments","setAcceptAttachments","acceptTainacanItems","setAcceptTainacanItems","generateTainacanItems","setGenerateTainacanItems","_editingProcessType$a","_editingProcessType$a2","_editingProcessType$g","description","accept_attachments","accept_tainacan_items","generate_tainacan_items","handleSave","handleResetForm","checked","Fragment","Draggable","Tooltip","Card","CardBody","CardHeader","CardFooter","stepsState","setStepsState","initialStepsState","reduce","acc","handleDragStart","event","typeId","dataTransfer","setData","toString","handleDrop","dropIndex","preventDefault","draggedTypeId","getData","draggedStepId","draggedStepIndex","findIndex","parseInt","updatedSteps","draggedStep","splice","handleDragOver","steps","split","item","elementId","appendToOwnerDocument","transferData","onDragStart","onDraggableStart","onDraggableEnd","draggable","onDragOver","onDrop","text","setProcess","setError","getProcessIdFromUrl","urlParams","URLSearchParams","search","get","fetchProcess","filteredSteps"],"sourceRoot":""}